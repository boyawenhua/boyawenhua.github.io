/*!
 * jQuery ClassyLoader
 * vox.SPACE
 *
 * Written by Marius Stanciu - Sergiu <marius@vox.space>
 * Licensed under the MIT license https://vox.SPACE/LICENSE-MIT
 * Version 1.2.1
 *
 */
 /*
width：圆形进度条的宽度，单位像素，默认值200。
height：圆形进度条的高度，单位像素，默认值200。
animate：圆形进度条是否动画，默认值为true。
percentage：圆形进度条的百分比值，0-100之间，默认值为100。
speed：一次动画循环的时间，单位毫秒，默认值为1。
showRemaining：是否显示剩余的百分比，默认值为true。
start：开始的角度，默认值为left，可选值有：left，right，top和bottom。
fontFamily：百分比数值的字体，默认值为Helvetica。
showText：是否显示百分比数值文本，默认值为true。
fontSize：百分比数值的字体尺寸，单位像素，默认值50px。
roundedLine：是否使用圆角，单位像素，默认值false。
diameter：圆形进度条的直径，单位像素，默认值80。
fontColor：百分比文本的颜色，可以是任何CSS颜色，hex，rgb，rgba，hsl，hsla。默认值为rgba(25, 25, 25, 0.6)。
lineColor：圆形进度条的线条颜色，默认值为rgba(55, 55, 55, 1)。
remainingLineColor：剩余百分比的线条颜色（如果showRemaining为true）。默认值为rgba(55, 55, 55, 0.4)。
lineWidth：圆形进度条的线条宽度，默认值为5。
 */
(function(d) {
    d.fn.ClassyLoader = function(a) {
        a = d.extend({},
        {
            width: 300,
            height: 300,
            animate: !0,
            displayOnLoad: !0,
            percentage: 100,
            speed: 2,
            roundedLine: !1,
            showRemaining: !0,
            fontFamily: "Helvetica",
            fontSize: "50px",
            showText: !0,
            diameter: 80,
            fontColor: "rgba(25, 25, 25, 0.6)",
            lineColor: "rgba(55, 55, 55, 1)",
            remainingLineColor: "rgba(55, 55, 55, 0.4)",
            lineWidth: 5,
            start: "left"
        },
        a);
        var e = d(this);
        this.draw = function(b) {
            "undefined" !== typeof b && (a.percentage = b);
            var c = e[0].getContext("2d"),
            h = e.width() / 2,
            d = e.height() / 2,
            f = 0,
            g = 0;
            c.scale(1, 1);
            c.lineWidth = a.lineWidth;
            c.strokeStyle = a.lineColour;
            setTimeout(function k() {
                var b = Math.PI / 180 * 360 / 100 * (f + 1),
                b = b || Math.PI / 180 * 360 / 100 * (f + 1);
                c.clearRect(0, 0, e.width(), e.height()); ! 0 === a.showRemaining && (c.beginPath(), c.strokeStyle = a.remainingLineColor, c.arc(h, d, a.diameter, 0, 360), c.stroke(), c.closePath());
                c.strokeStyle = a.lineColor;
                c.beginPath();
                c.lineCap = !0 === a.roundedLine ? "round": "butt";
                switch (a.start) {
                case "top":
                    g = 1.5 * Math.PI;
                    break;
                case "bottom":
                    g = .5 * Math.PI;
                    break;
                case "right":
                    g = 1 * Math.PI;
                    break;
                default:
                    g = 0
                }
                c.arc(h, d, a.diameter, g, b + g);
                c.stroke();
                c.closePath(); ! 0 === a.showText && (c.fillStyle = a.fontColor, c.font = a.fontSize + " " + a.fontFamily, c.textAlign = "center", c.textBaseline = "middle", c.fillText(f + 1 + "", h, d));
                f += 1;
                f < a.percentage && setTimeout(k, a.speed)
            },
            a.speed)
        };
        this.setPercent = function(b) {
            a.percentage = b;
            return this
        };
        this.getPercent = function() {
            return a.percentage
        };
        this.show = function() {
            var b = e[0].getContext("2d"),
            c = e.width() / 2,
            d = e.height() / 2;
            b.scale(1, 1);
            b.lineWidth = a.lineWidth;
            b.strokeStyle = a.lineColour;
            b.clearRect(0, 0, e.width(), e.height());
            b.strokeStyle = a.lineColor;
            b.beginPath();
            b.arc(c, d, a.diameter, 0, Math.PI / 180 * (a.percentage / 100) * 360);
            b.stroke();
            b.closePath(); ! 0 === a.showText && (b.fillStyle = a.fontColor, b.font = a.fontSize + " " + a.font, b.textAlign = "center", b.textBaseline = "middle", b.fillText(a.percentage + "", c, d)); ! 0 === a.showRemaining && (b.beginPath(), b.strokeStyle = a.remainingLineColor, b.arc(c, d, a.diameter, 0, 360), b.stroke(), b.closePath())
        };
        this.__constructor = function() {
            d(this).attr("width", a.width);
            d(this).attr("height", a.height); ! 0 === a.displayOnLoad && (!0 === a.animate ? this.draw() : this.show());
            return this
        };
        return this.__constructor()
    }
})(jQuery);